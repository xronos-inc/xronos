VERSION 0.8
ARG base_image=ubuntu:22.04
FROM $base_image

IMPORT ../ AS root

WORKDIR /xronos

build-essential:
    # Warning: In QEMU emulation, this may crash with a segfault related to libc-bin
    # until you follow steps listed at https://github.com/docker/buildx/issues/1170#issuecomment-1159350550
    RUN apt update && apt install -y build-essential git libpthread-stubs0-dev software-properties-common lsb-release ca-certificates gpg wget
    RUN wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | gpg --dearmor - | tee /usr/share/keyrings/kitware-archive-keyring.gpg
    RUN echo "deb [signed-by=/usr/share/keyrings/kitware-archive-keyring.gpg] https://apt.kitware.com/ubuntu/ $(lsb_release -cs) main" | tee /etc/apt/sources.list.d/kitware.list
    RUN apt update
    RUN apt-cache madison cmake-data
    RUN apt install -y cmake=3.28.6-0kitware1ubuntu22.04.1 cmake-data=3.28.6-0kitware1ubuntu22.04.1

clang-tools:
    FROM +build-essential
    LET clang_tools_version=18
    RUN apt-get update -q 
    RUN apt-get install -y software-properties-common wget gnupg
    RUN wget -qO- https://apt.llvm.org/llvm.sh | bash -s -- ${clang_tools_version}
    RUN update-alternatives --install /usr/bin/clang clang /usr/bin/clang-${clang_tools_version} 100
    RUN update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-${clang_tools_version} 100
    RUN apt-get install -y -q --no-install-recommends \
            llvm-${clang_tools_version}-dev \
            libclang-${clang_tools_version}-dev
    RUN apt-get install -y -q --no-install-recommends \
            clang-format-${clang_tools_version} \
            clang-tidy-${clang_tools_version}
    RUN update-alternatives --install /usr/bin/clang-format clang-format /usr/bin/clang-format-${clang_tools_version} 100
    RUN update-alternatives --install /usr/bin/clang-tidy clang-tidy /usr/bin/clang-tidy-${clang_tools_version} 100

grpc:
    FROM +build-essential
    GIT CLONE --branch v1.67.1 https://github.com/grpc/grpc grpc
    WORKDIR grpc/cmake/build
    RUN true # this is to invalidate the cache
    RUN CXX=/usr/bin/g++ cmake \
            -DCMAKE_THREAD_LIBS_INIT="-lpthread" \
            -DCMAKE_HAVE_THREADS_LIBRARY=1 \
            -DCMAKE_USE_WIN32_THREADS_INIT=0 \
            -DCMAKE_USE_PTHREADS_INIT=1 \
            -DTHREADS_PREFER_PTHREAD_FLAG=ON \
        -DgRPC_INSTALL=ON \
        -DgRPC_BUILD_TESTS=OFF \
        -DBUILD_SHARED_LIBS=ON \
        -DCMAKE_INSTALL_PREFIX=/xronos/grpc-install \
        ../.. \
        && make -j $(nproc) \
        && make install \
        && cd /xronos && rm -rf grpc
    WORKDIR /xronos
    SAVE ARTIFACT grpc-install

python:
    FROM +clang-tools
    RUN export DEBIAN_FRONTEND=noninteractive && \
        apt update && \
        add-apt-repository ppa:deadsnakes/ppa && \
        apt update && \
        apt install -y \
            python3.10-dev python3.10-venv \
            python3.11-dev python3.11-venv \
            python3.12-dev python3.12-venv \
            python3.13-dev python3.13-venv python3.13-nogil && \
        apt clean && rm -rf /var/lib/apt/lists/*
    # This is a workaround for a gcc bug. See https://gcc.gnu.org/bugzilla/show_bug.cgi?id=118700
    RUN cp /usr/include/python3.13t/pyconfig.h ./
    RUN rm -rf /usr/include/python3.13t
    RUN cp -r /usr/include/python3.13 /usr/include/python3.13t
    RUN rm /usr/include/python3.13t/pyconfig.h
    RUN mv ./pyconfig.h /usr/include/python3.13t/pyconfig.h

python-venv:
    ARG python_version=3.12
    FROM +python
    WORKDIR /xronos
    COPY root+configs/dev-requirements.txt ./
    RUN python$python_version -m venv ./.venv
    RUN . .venv/bin/activate && pip install -r dev-requirements.txt
    # Run pyright once to install its node dependencies
    RUN . .venv/bin/activate && pyright --version
