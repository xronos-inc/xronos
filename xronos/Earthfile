VERSION 0.8

IMPORT ../base-images AS base-images
IMPORT ../lib AS lib
IMPORT ../ AS root

build:
    BUILD +wheel --python_version=3.10 --python_version=3.11 --python_version=3.12 --python_version=3.13 --python_version=3.13t

test:
    BUILD +test-py --python_version=3.10 --python_version=3.11 --python_version=3.12 --python_version=3.13 --python_version=3.13t

lint:
    BUILD +lint-py
    BUILD +lint-cpp

common:
    FROM --pass-args base-images+python-venv
    COPY lib+install/install /install
    WORKDIR /xronos/xronos
    COPY --dir cpp src ./
    COPY pyproject.toml README.md CMakeLists.txt ./
    COPY LICENSE THIRD_PARTY_NOTICE ./
    COPY --dir third-party-licenses ./

wheel:
    FROM --pass-args +common
    RUN \
        export CMAKE_PREFIX_PATH="/install" && \
        export LD_LIBRARY_PATH=/install/lib && \
        . /xronos/.venv/bin/activate && \
        pip wheel . --no-deps
    LET arch=$(uname -m)
    LET platform_tag=$(echo "manylinux_2_35_$arch")
    RUN . /xronos/.venv/bin/activate && \
         export LD_LIBRARY_PATH=/install/lib && \
         auditwheel repair xronos-*.whl --plat $platform_tag --strip
    SAVE ARTIFACT --keep-ts wheelhouse/xronos-*.whl / AS LOCAL .

copy-tests:
    FROM scratch
    WORKDIR /xronos
    COPY test/ test/
    SAVE ARTIFACT test/ /test/

test-py:
    FROM --pass-args base-images+python-venv
    WORKDIR /xronos
    COPY --pass-args +wheel/xronos-*.whl .
    COPY --dir test src ./
    RUN . .venv/bin/activate && pip install xronos-*.whl
    RUN . .venv/bin/activate && pytest

lint-py:
    FROM base-images+python-venv
    COPY --dir src/ test/ ./
    COPY pyproject.toml ./
    RUN . .venv/bin/activate && ruff format --diff
    RUN . .venv/bin/activate && ruff check
    COPY +wheel/xronos-*.whl .
    RUN . .venv/bin/activate && pip install xronos-*.whl
    RUN . .venv/bin/activate && pyright
    RUN . .venv/bin/activate && mypy .

lint-cpp:
    FROM +common
    COPY root+configs/.clang-tidy ./
    COPY root+configs/.clang-format ./
    WORKDIR /xronos/xronos/cpp
    RUN clang-format --dry-run --Werror -style=file $(find . -name '*.cc' -print) && \
        clang-format --dry-run --Werror -style=file $(find . -name '*.hh' -print)
    # Build with clang-tidy. Clang-tidy slows down the build considerably.
    # Therefore, we run it only once and disable clang-tidy when building the
    # wheels for different python version.
    WORKDIR /xronos/xronos
    RUN export CMAKE_PREFIX_PATH="/install" && \
        export LD_LIBRARY_PATH=/install/lib && \
        . /xronos/.venv/bin/activate && \
        pip wheel . --no-deps \
            -C skbuild.cmake.define.XRONOS_BINDINGS_RUN_CLANG_TIDY=ON \
            -C skbuild.cmake.define.CLANG_TIDY_ERROR=ON
