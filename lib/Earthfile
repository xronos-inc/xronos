VERSION 0.8

IMPORT ../base-images AS base-images
IMPORT ../ AS root
IMPORT ../third-party/catch2 AS catch2
IMPORT ../third-party/opentelemetry AS opentelemetry

common:
  FROM base-images+clang-tools
  COPY root+configs/.clang-format ./
  COPY root+configs/.clang-tidy ./
  COPY CMakeLists.txt Config.cmake.in .
  COPY --dir graph-exporter graph-messages runtime telemetry telemetry-otel .
  SAVE ARTIFACT . lib

build:
  FROM +common
  COPY opentelemetry+install/install /install
  COPY opentelemetry+install/third-party ../third-party
  RUN cmake -S . -B build -DCMAKE_INSTALL_PREFIX=/install -DXRONOS_LIB_RUN_CLANG_TIDY=ON -DCLANG_TIDY_ERROR=ON -DXRONOS_LIB_BUILD_TESTS=OFF
  RUN export LD_LIBRARY_PATH=/install/lib && cmake --build build --target all -j$(nproc) --config Release

install:
  FROM +build
  RUN export LD_LIBRARY_PATH=/install/lib && cmake --build build --target install
  SAVE ARTIFACT /install

test:
  FROM +build
  COPY catch2+install/install /install
  COPY catch2+install/third-party ../third-party
  RUN cmake -S . -B build -DCMAKE_INSTALL_PREFIX=/install -DXRONOS_LIB_RUN_CLANG_TIDY=ON -DCLANG_TIDY_ERROR=ON -DXRONOS_LIB_BUILD_TESTS=ON
  RUN export LD_LIBRARY_PATH=/install/lib && cmake --build build --target all -j$(nproc) --config Release
  WORKDIR build
  RUN export LD_LIBRARY_PATH=/install/lib && make test

lint:
  FROM +common
  RUN clang-format-18 --dry-run --Werror -style=file $(find . -name '*.cc' -print) && \
      clang-format-18 --dry-run --Werror -style=file $(find . -name '*.hh' -print)