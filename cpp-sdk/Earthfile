VERSION 0.8

IMPORT ../ AS root
IMPORT ../third-party/googletest AS googletest
IMPORT ../third-party/doxygen AS doxygen
IMPORT ../lib AS lib

common:
  FROM doxygen+clang-tools-doxygen
  COPY root+configs/.clang-format ./
  COPY root+configs/.clang-tidy ./
  COPY CMakeLists.txt Config.cmake.in .
  COPY --dir src include examples test docs .
  SAVE ARTIFACT . cpp-sdk

build:
  FROM +common
  COPY lib+install/install /install
  RUN cmake -S . -B build -DCMAKE_INSTALL_PREFIX=/install -DXRONOS_SDK_RUN_CLANG_TIDY=ON -DCLANG_TIDY_ERROR=ON -DXRONOS_SDK_BUILD_TESTS=OFF -DXRONOS_SDK_BUILD_DOCS=OFF
  RUN export LD_LIBRARY_PATH=/install/lib && cmake --build build --target all -j$(nproc) --config Release

install:
  FROM +build
  RUN export LD_LIBRARY_PATH=/install/lib && cmake --build build --target install
  SAVE ARTIFACT /install

test:
  FROM +build
  COPY googletest+install/third-party ../third-party
  RUN cmake -S . -B build -DCMAKE_INSTALL_PREFIX=/install -DXRONOS_SDK_RUN_CLANG_TIDY=ON -DCLANG_TIDY_ERROR=ON -DXRONOS_SDK_BUILD_TESTS=ON -DXRONOS_SDK_BUILD_DOCS=OFF
  RUN export LD_LIBRARY_PATH=/install/lib && cmake --build build --target all -j$(nproc) --config Release
  WORKDIR build
  RUN export LD_LIBRARY_PATH=/install/lib && make test

lint:
  FROM +common
  RUN clang-format-18 --dry-run --Werror -style=file $(find . -name '*.cc' -print) && \
      clang-format-18 --dry-run --Werror -style=file $(find . -name '*.hh' -print)

docs:
  FROM +build
  RUN cmake -S . -B build -DCMAKE_INSTALL_PREFIX=/install -DXRONOS_SDK_BUILD_DOCS=ON
  RUN export LD_LIBRARY_PATH=/install/lib && cmake --build build --target docs --config Release
  SAVE ARTIFACT --keep-ts build/docs/html AS LOCAL build/docs/html
  SAVE ARTIFACT build/docs/html
